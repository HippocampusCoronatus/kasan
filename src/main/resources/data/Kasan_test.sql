-- MySQL Script generated by MySQL Workbench
-- 12/04/17 00:03:31
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kasan_test
-- -----------------------------------------------------
-- Kasan_testスキーマ
DROP SCHEMA IF EXISTS `kasan_test` ;

-- -----------------------------------------------------
-- Schema kasan_test
--
-- Kasan_testスキーマ
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kasan_test` DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci ;
USE `kasan` ;

-- -----------------------------------------------------
-- Table `kasan_test`.`m_authentication_token`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_authentication_token` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_authentication_token` (
  `member_no` BIGINT NOT NULL COMMENT '会員番号',
  `token` VARCHAR(255) NOT NULL COMMENT 'トークン',
  UNIQUE INDEX `token_UNIQUE` (`token` ASC),
  PRIMARY KEY (`member_no`))
ENGINE = InnoDB
COMMENT = '認証トークン';


-- -----------------------------------------------------
-- Table `kasan_test`.`m_member`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_member` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_member` (
  `no` BIGINT NOT NULL COMMENT '番号',
  `name` VARCHAR(30) NOT NULL COMMENT '名称',
  `email` VARCHAR(255) NOT NULL COMMENT 'Eメール',
  `password` BLOB NULL COMMENT 'パスワード',
  PRIMARY KEY (`no`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB
COMMENT = '会員マスタ';


-- -----------------------------------------------------
-- Table `kasan_test`.`m_account_book`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_account_book` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_account_book` (
  `no` BIGINT NOT NULL COMMENT '番号',
  `name` VARCHAR(30) NOT NULL COMMENT '名称',
  PRIMARY KEY (`no`))
ENGINE = InnoDB
COMMENT = '会計帳簿マスタ';


-- -----------------------------------------------------
-- Table `kasan_test`.`m_member_account_book_relation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_member_account_book_relation` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_member_account_book_relation` (
  `member_no` BIGINT NOT NULL COMMENT '会員番号',
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  PRIMARY KEY (`member_no`, `account_book_no`),
  INDEX `fk_member_account_book_account_book_no_idx` (`account_book_no` ASC),
  CONSTRAINT `fk_member_account_book_relation_to_member`
    FOREIGN KEY (`member_no`)
    REFERENCES `kasan_test`.`m_member` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_member_account_book_relation_to_account_book`
    FOREIGN KEY (`account_book_no`)
    REFERENCES `kasan_test`.`m_account_book` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '会員会計帳簿関連マスタ';


-- -----------------------------------------------------
-- Table `kasan_test`.`t_journal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`t_journal` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`t_journal` (
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  `no` BIGINT NOT NULL COMMENT '番号',
  `trading_date` DATE NOT NULL COMMENT '取引日',
  PRIMARY KEY (`account_book_no`, `no`),
  CONSTRAINT `fk_journal_to_account_book`
    FOREIGN KEY (`account_book_no`)
    REFERENCES `kasan_test`.`m_account_book` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '仕訳';


-- -----------------------------------------------------
-- Table `kasan_test`.`m_account_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_account_title` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_account_title` (
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  `code` CHAR(6) NOT NULL COMMENT 'コード',
  `name` VARCHAR(255) NOT NULL COMMENT '名称',
  `type` VARCHAR(255) NOT NULL COMMENT '種別',
  `account_title_group` VARCHAR(255) NULL COMMENT 'グループ',
  PRIMARY KEY (`account_book_no`, `code`),
  CONSTRAINT `fk_account_title_to_account_book`
    FOREIGN KEY (`account_book_no`)
    REFERENCES `kasan_test`.`m_account_book` (`no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '勘定科目マスタ';


-- -----------------------------------------------------
-- Table `kasan_test`.`m_account_title_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`m_account_title_item` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`m_account_title_item` (
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  `account_title_code` CHAR(6) NOT NULL COMMENT '勘定科目コード',
  `no` BIGINT NOT NULL COMMENT '番号',
  `name` VARCHAR(255) NULL COMMENT '名称',
  PRIMARY KEY (`account_book_no`, `account_title_code`, `no`),
  CONSTRAINT `fk_account_title_detail_to_account_title`
    FOREIGN KEY (`account_book_no` , `account_title_code`)
    REFERENCES `kasan_test`.`m_account_title` (`account_book_no` , `code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '勘定科目品目マスタ';


-- -----------------------------------------------------
-- Table `kasan_test`.`t_journal_detail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`t_journal_detail` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`t_journal_detail` (
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  `journal_no` BIGINT NOT NULL COMMENT '仕訳番号',
  `type` VARCHAR(255) NOT NULL COMMENT '種別',
  `no` BIGINT NOT NULL COMMENT '番号',
  `account_title_code` CHAR(6) NOT NULL COMMENT '勘定科目コード',
  `amount` BIGINT NOT NULL COMMENT '金額',
  PRIMARY KEY (`account_book_no`, `journal_no`, `type`, `no`),
  INDEX `fk_journal_detail_to_account_title_idx` (`account_book_no` ASC, `account_title_code` ASC),
  CONSTRAINT `fk_journal_detail_to_journal`
    FOREIGN KEY (`account_book_no` , `journal_no`)
    REFERENCES `kasan_test`.`t_journal` (`account_book_no` , `no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journal_detail_to_account_title`
    FOREIGN KEY (`account_book_no` , `account_title_code`)
    REFERENCES `kasan_test`.`m_account_title` (`account_book_no` , `code`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '仕訳詳細';


-- -----------------------------------------------------
-- Table `kasan_test`.`t_journal_detail_item`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `kasan_test`.`t_journal_detail_item` ;

CREATE TABLE IF NOT EXISTS `kasan_test`.`t_journal_detail_item` (
  `account_book_no` BIGINT NOT NULL COMMENT '会計帳簿番号',
  `journal_no` BIGINT NOT NULL COMMENT '仕訳番号',
  `journal_detail_type` VARCHAR(255) NOT NULL COMMENT '仕訳詳細種別',
  `journal_detail_no` BIGINT NOT NULL COMMENT '仕訳詳細番号',
  `no` BIGINT NOT NULL COMMENT '番号',
  `account_title_code` CHAR(6) NOT NULL COMMENT '勘定科目コード',
  `account_title_item_no` BIGINT NOT NULL COMMENT '勘定科目詳細番号',
  `amount` BIGINT NOT NULL COMMENT '金額',
  PRIMARY KEY (`account_book_no`, `journal_no`, `journal_detail_type`, `journal_detail_no`, `no`),
  INDEX `fk_journal_detail_item_to_account_title_item_idx` (`account_book_no` ASC, `account_title_code` ASC, `account_title_item_no` ASC),
  CONSTRAINT `fk_journal_detail_item_to_journal_detail`
    FOREIGN KEY (`account_book_no` , `journal_no` , `journal_detail_type` , `journal_detail_no`)
    REFERENCES `kasan_test`.`t_journal_detail` (`account_book_no` , `journal_no` , `type` , `no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_journal_detail_item_to_account_title_item`
    FOREIGN KEY (`account_book_no` , `account_title_code` , `account_title_item_no`)
    REFERENCES `kasan_test`.`m_account_title_item` (`account_book_no` , `account_title_code` , `no`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '仕訳詳細';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
